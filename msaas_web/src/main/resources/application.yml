#配置html页面解析模板
spring:
  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
    mode: HTML
  application:
    name: service=msaas
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
  # 数据库配置
  datasource:
    # driver-class-name: com.mysql.jdbc.Driver # 被弃用了
    # driver-class-name: com.mysql.cj.jdbc.Driver # 可省略
    # 通过 org.springframework.boot.jdbc 包下的枚举类 DatabaseDriver.java 中的 fromJdbcUrl(String url) 方法, 根据数据库 url 链接地址获取驱动
    url: jdbc:mysql://127.0.0.1:3306/springboot?charset=utf8mb4&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
    # 使用jasypt加密后的
    username: CodeSheep(k8xGp81xIDrTmmShqpkXZg5+ZlH8e4MN8TvMz6I8NvlWoe2SMjmchxHpMeNzXoE6)
    password: CodeSheep(JZKecUE8aqUuOLJnbI4zKyNEARWx3MxPNOdLXz/5IzYBatH/mU3JOdLfds/NCwTr)
    # 默认连接池配置
    hikari:
      # 最小空闲连接数
      minimum-idle: 5
      # 最大连接数
      maximum-pool-size: 15
      # 自动提交从池中返回的连接(默认为:true)
      auto-commit: true
  # 使用开发环境
  profiles:
    active: dev
#    active: prod

#配置服务端口为8181
server:
  port: 8181

#自定义资源映射
address:
  audio:
    intercept: /music/**
    redirect: file:D:/music/
  video:
    intercept: /mv/**
    redirect: file:D:/videos/

jasypt:
#  resolver:
#    bean:
#  detector:
#    bean:
  encryptor:
    bean: codeSheepEncryptorBean
    property:
      prefix: CodeSheep(
      suffix: )

jwt:
  # 密钥
  secret: CodeSheep(KkWM1ZhG4Lk2WfiFq2a/L2QUVQ1EqT9Be73WDGWPLL0b8jXVvY5gaYH2f0EvPy44)
  # 秒
  expire: 1800
# springboot 默认的静态资源路径有
# /META-INF/resources/
# /resources/
# /static
# /public/
# 采用了bean的方式配置会覆盖掉默认的方式
# WebMvcConfigurer 可以额外的进行自定义配置, 并且不影响springboot的自动装配
# WebMvcConfigurationSupport 也可以自定义配置, 但是会影响到springboot的自动装配


# 微信jssdk使用微信能力的基本配置
wx:
  config:
    appid: wxc87009e90041c1b4
    appsecret: 5cc358d6031d0da1a87fbe4483563b30
    token_url: https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid=%s&secret=%s
    ticket_url: https://api.weixin.qq.com/cgi-bin/ticket/getticket?type=jsapi&access_token=%s
    user_token_url: https://api.weixin.qq.com/sns/oauth2/access_token?appid=%s&secret=%s&code=%s&grant_type=authorization_code
    user_url: https://api.weixin.qq.com/sns/userinfo?access_token=%s&openid=%s&lang=zh_CN
---
# 开发环境
spring:
  profiles:
    - dev
  thymeleaf:
    cache: false
  output:
    ansi:
      # 控制日志在控制台是否为彩色显示, always[总是] detect[尝试--默认] never[从不]
      enabled: always
server:
  port: 8082
# 开启控制台的调式级别日志记录, 可以输出 springboot 原生 JDBC 执行的 SQL 语句, 但会有大量的自动装配日志记录
# debug: true
# 将 org.springframework.boot.autoconfigure 包下所有的日志级别调值 ERROR 级别, 用来屏蔽自动装配的日志记录
logging:
  # 指定某个类的日志等级, 以输出目标日志, 如执行的 sql 语句
  level:
    org:
      springframework:
        jdbc:
          core:
            JdbcTemplate: DEBUG
        web:
          servlet:
            DispatcherServlet: DEBUG
#      springframework:
#        boot:
#          autoconfigure: ERROR

---
# 生产环境
spring:
  profiles:
    - prod
server:
  port: 8081